{"version":3,"sources":["scripts/main.js"],"names":["board","gameEnded","score","ROWS","COLUMNS","startButton","document","getElementsByClassName","setGame","startGameMessage","changeButtontoRestart","addCell","clearScore","cellIndex","i","j","updateCell","num","cells","innerText","classList","value","add","winGameMessage","boards","find","row","includes","getElementById","remove","loseGameMessage","canMakeMove","emptyCellsInBoard","currentValue","startMessage","loseMessage","move","boardRow","filterZero","length","updateScore","push","filter","moveLeft","cell","moveRight","reverse","moveUp","column","map","d","moveDown","innerHTML","generateCellNumber","Math","random","found","floor","newCell","startbutton","addEventListener","event","eventName","key","previousBoard","JSON","stringify"],"mappings":"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","file":"main.a51a9aba.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst ROWS = 4;\nconst COLUMNS = 4;\nconst startButton = document.getElementsByClassName('button start')[0];\nlet gameEnded;\n\nstartButton.addEventListener('click', setGame);\n\nfunction setGame() {\n  startGameMessage();\n  changeButtontoRestart(startButton);\n\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  addCell();\n  addCell();\n  clearScore();\n  gameEnded = false;\n\n  let cellIndex = 0;\n\n  for (let i = 0; i < ROWS; i++) {\n    for (let j = 0; j < COLUMNS; j++) {\n      const num = board[i][j];\n      const cells = document.getElementsByClassName('field-cell')[cellIndex];\n\n      updateCell(num, cells);\n      cellIndex++;\n    }\n  }\n}\n\nfunction updateCell(num, cells) {\n  cells.innerText = '';\n  cells.classList.value = '';\n  cells.classList.add('field-cell');\n\n  if (num > 0) {\n    cells.innerText = num;\n\n    if (num <= 2048) {\n      cells.classList.add(`field-cell--${num}`);\n    }\n  }\n}\n\nfunction winGameMessage(boards) {\n  if (boards.find((row) => row.includes(2048))) {\n    const winMessage = document.getElementById('win-message');\n\n    winMessage.classList.remove('hidden');\n    gameEnded = true;\n  }\n}\n\nfunction loseGameMessage() {\n  if (canMakeMove()) {\n    return;\n  }\n\n  const loseMessage = document.getElementById('lose-message');\n\n  loseMessage.classList.remove('hidden');\n  gameEnded = true;\n}\n\nfunction canMakeMove() {\n  if (emptyCellsInBoard()) {\n    return true;\n  }\n\n  for (let i = 0; i < ROWS; i++) {\n    for (let j = 0; j < COLUMNS; j++) {\n      const currentValue = board[i][j];\n\n      if (j < COLUMNS - 1 && currentValue === board[i][j + 1]) {\n        return true;\n      }\n\n      if (i < ROWS - 1 && currentValue === board[i + 1][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction startGameMessage() {\n  const startMessage = document.getElementById('start-message');\n  const loseMessage = document.getElementById('lose-message');\n\n  startMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n}\n\ndocument.addEventListener('keydown', (event) => {\n  const eventName = event.key;\n  const previousBoard = JSON.stringify(board);\n\n  if (!gameEnded) {\n    switch (eventName) {\n      case 'ArrowUp':\n        moveUp();\n        break;\n      case 'ArrowDown':\n        moveDown();\n        break;\n      case 'ArrowRight':\n        moveRight();\n        break;\n      case 'ArrowLeft':\n        moveLeft();\n        break;\n    }\n\n    if (JSON.stringify(board) !== previousBoard) {\n      addCell();\n    }\n\n    winGameMessage(board);\n    loseGameMessage(board);\n  }\n});\n\nfunction move(row) {\n  let boardRow = filterZero(row);\n\n  for (let i = 0; i < boardRow.length - 1; i++) {\n    if (boardRow[i] === boardRow[i + 1]) {\n      boardRow[i] *= 2;\n      boardRow[i + 1] = 0;\n      updateScore(boardRow[i]);\n    }\n  }\n  boardRow = filterZero(boardRow);\n\n  while (boardRow.length < COLUMNS) {\n    boardRow.push(0);\n  }\n\n  return boardRow;\n}\n\nfunction filterZero(row) {\n  return row.filter((num) => num !== 0);\n}\n\nfunction moveLeft() {\n  let cellIndex = 0;\n\n  for (let i = 0; i < ROWS; i++) {\n    let row = board[i];\n\n    row = move(row);\n    board[i] = row;\n\n    for (let j = 0; j < COLUMNS; j++) {\n      const cell = document.getElementsByClassName('field-cell')[cellIndex];\n      const num = board[i][j];\n\n      updateCell(num, cell);\n      cellIndex++;\n    }\n  }\n}\n\nfunction moveRight() {\n  let cellIndex = 0;\n\n  for (let i = 0; i < ROWS; i++) {\n    let row = board[i];\n\n    row.reverse();\n    row = move(row).reverse();\n    board[i] = row;\n\n    for (let j = 0; j < COLUMNS; j++) {\n      const cell = document.getElementsByClassName('field-cell')[cellIndex];\n      const num = board[i][j];\n\n      updateCell(num, cell);\n      cellIndex++;\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let i = 0; i < COLUMNS; i++) {\n    let column = board.map((d) => d[i]);\n\n    column = move(column);\n\n    for (let j = 0; j < ROWS; j++) {\n      board[j][i] = column[j];\n\n      const cell\n      = document.getElementsByClassName('field-cell')[j * COLUMNS + i];\n      const num = board[j][i];\n\n      updateCell(num, cell);\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let i = 0; i < COLUMNS; i++) {\n    let column = board.map((d) => d[i]);\n\n    column.reverse();\n    column = move(column);\n    column.reverse();\n\n    for (let j = 0; j < ROWS; j++) {\n      board[j][i] = column[j];\n\n      const cell\n      = document.getElementsByClassName('field-cell')[j * COLUMNS + i];\n      const num = board[j][i];\n\n      updateCell(num, cell);\n    }\n  }\n}\n\nfunction updateScore(num) {\n  score += num;\n  document.getElementsByClassName('game-score')[0].innerHTML = score;\n}\n\nfunction generateCellNumber() {\n  const num = Math.random();\n\n  if (num < 0.9) {\n    return 2;\n  }\n\n  return 4;\n}\n\nfunction addCell() {\n  let found = false;\n\n  if (!emptyCellsInBoard()) {\n    return;\n  }\n\n  while (!found) {\n    const i = Math.floor(Math.random() * ROWS);\n    const j = Math.floor(Math.random() * COLUMNS);\n\n    if (board[i][j] === 0) {\n      const newCell = generateCellNumber();\n      const cell = document.getElementsByClassName('field-cell')[i * ROWS + j];\n\n      board[i][j] = newCell;\n      updateCell(newCell, cell);\n\n      found = true;\n    }\n  }\n}\n\nfunction emptyCellsInBoard() {\n  for (let i = 0; i < ROWS; i++) {\n    for (let j = 0; j < COLUMNS; j++) {\n      if (board[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction changeButtontoRestart(startbutton) {\n  startbutton.innerText = 'Restart';\n  startbutton.classList.remove('start');\n  startbutton.classList.add('restart');\n}\n\nfunction clearScore() {\n  score = 0;\n  document.getElementsByClassName('game-score')[0].innerHTML = score;\n}\n"]}